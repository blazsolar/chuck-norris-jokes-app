buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "http://dl.bintray.com/blazsolar/gradle-plugins" }
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath "com.github.blazsolar.gradle:coveralls-gradle-plugin:2.0.1"
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
        classpath 'com.github.blazsolar.gradle:play-publisher:0.1.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'crashlytics'
apply plugin: 'com.github.blazsolar.play-publisher'
apply plugin: 'com.github.blazsolar.coveralls'
apply from: '../config/quality.gradle'

repositories {
    maven { url 'http://download.crashlytics.com/maven' }
}

if (!project.hasProperty("chuckProductionStorePassword")) {
    ext.chuckProductionStorePassword = ""
}

if (!project.hasProperty("chuckProductionAlias")) {
    ext.chuckProductionAlias = ""
}

if (!project.hasProperty("chuckProductionKey")) {
    ext.chuckProductionKey = ""
}

android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    defaultConfig {
        applicationId "com.github.blazsolar.chuck"
        minSdkVersion 14
        targetSdkVersion 20
        versionCode 2
        versionName "1.1"
    }

    signingConfigs {
        release {
            storeFile file('keystore/release.keystore')
            storePassword chuckProductionStorePassword
            keyAlias chuckProductionAlias
            keyPassword chuckProductionKey
        }
    }

    buildTypes {

        debug {
            testCoverageEnabled = true
        }

        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        lintConfig file("../config/quality/lint/lint.xml")
    }

    jacoco {
        version = '0.7.1.201405082137'
    }
}

dependencies {
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.squareup.retrofit:retrofit:1.6.1'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.netflix.rxjava:rxjava-android:0.20.0'

    provided 'com.squareup.dagger:dagger-compiler:1.2.2'

    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.1'
    androidTestCompile('com.squareup.okhttp:mockwebserver:2.0.0') {
        exclude group: 'com.squareup.okhttp', module: 'okhttp'
    }
    compile 'com.crashlytics.android:crashlytics:1.+'
}

coveralls {
    jacocoReportPath = 'build/outputs/reports/coverage/debug/report.xml'
}

playPublisher {
    applicationName "BlazSolar_ChuckNorrisJokes/1.0"
    packageName "com.github.blazsolar.chuck"
    serviceAccountEmail "550173791554-l8136lroavuf5d8qflti6g18q62fi5o6@developer.gserviceaccount.com"
    keyP12 "/Users/blazsolar/.android/play/client_key.p12"
}

task uploadApk(type: com.github.blazsolar.gradle.tasks.UploadApkTask, dependsOn: assembleRelease) {
    apkPath "app/build/outputs/apk/app-release.apk"
    track TRACK_PRODUCTION
    listings = [
            (Locale.US.toString()): "Bug fixes" // TODO this should be generic
    ]
}